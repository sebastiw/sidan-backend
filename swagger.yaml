openapi: 3.0.1
info:
  title: Sidan API.
  description: |-
    Something
  contact:
    name: John Doe
    url: http://john.doe.com
    email: john.doe@example.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 0.0.1
servers:
- url: http://localhost:8080/
security:
- api_key: []
paths:
  /db/entries:
    get:
      tags:
      - entry
      responses:
       200:
          description: an array of Entry
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
          
  /db/entry:
    post:
      tags:
      - entry
      description: Create on new entry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entry'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
  /db/entry/{id}:
    get:
      tags:
      - entry
      operationId: readEntry
      parameters:
      - name: id
        in: path
        description: id of entry
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
    put:
      tags:
      - entry
      operationId: updateEntry
      parameters:
      - name: id
        in: path
        description: id of entry
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entry'
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
         
    delete:
      tags:
      - entry
      operationId: deleteEntry
      parameters:
      - name: id
        in: path
        description: id of entry
        required: true
        schema:
          type: integer
          format: int64
      responses:
        201:
          description: Entry deleted
  /db/member:
    post:
      tags:
      - member
      operationId: createMember
  /db/member/{id}:
    get:
      tags:
      - member
      operationId: readMember
    put:
      tags:
      - member
      operationId: updateMember
    delete:
      tags:
      - member
      operationId: deleteMember
  /db/members:
    get:
      tags:
      - member
      operationId: readAllMember
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: KEY
      in: header
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/auth
          tokenUrl: /oauth2/token
          scopes:
            bar: foo
  schemas: 
    Entry: 
      type: object
      required:
        - msg
        - sig
      properties:
          id:
            type: integer
            format: int64
          date:
            type: string
            format: date
          time:
            type: string
          msg:
            type: string
          status:
            type: integer
            format: int64
          cl:
            type: integer
            format: int64
          sig:
            type: string
          email:
            type: string
          place:
            type: string
          ip:
            type: string
          host:
            type: string
          olsug:
            type: integer
            format: int64
          enheter:
            type: integer
            format: int64
          lat:
            type: number
            format: double
          lon:
            type: number
            format: double
          report:
            type: boolean
          likes: 
            type: integer
            format: int64
          secret:
            type: boolean
          personal_secret:
            type: boolean
          side_kicks:
            type: array
            items:
              $ref: '#/components/schemas/SideKick'
    SideKick:
      type: object
      properties:
        number:
          type: string
          format: int64
x-meta-array:
- value1
- value2
x-meta-array-obj:
- name: obj
  value: field
x-meta-value: value
